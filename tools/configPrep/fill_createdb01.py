class Createdb01Writer:
	"""	Create file: metadata/createdb01.sql """

	def __init__(self, filename):

		hdr = \
"""-- additional commands that follow execution of createdb.sql or installation from a SIARD file
-- typical commands: CREATE VIEW or COMMENT ON COLUMN
-- NOTE: all SCHEMAs and VIEWs need to be added to the list.xml

-- This file has been generated by an automation tool configPrep


"""
		self.name = filename
		#print("Creating", filename)
		self.f = open(filename, 'w', newline='', encoding="utf8")
		self.tables_added = []
		self.current_table_skip = False
		self.f.write(hdr)


	def close(self):
		self.f.close()
		print("Created", self.name)


	def is_table_active(self):
		if self.current_table_skip:
			return False
		else:
			return True


	def begin_table(self, schema, table):
		table = "\"" + schema + "\".\"" + table + "\""
		if table in self.tables_added:
			self.current_table_skip = True
		else:
			self.tables_added.append(table)
			self.current_table_skip = False


	def end_table(self):
		if self.current_table_skip:
			return
		self.f.write("\n")


	def one_column(self, schema, table, column, comment):
		if self.current_table_skip or not comment:
			return

		out = "COMMENT ON COLUMN \"" + schema + "\".\"" + table + "\".\"" + column + "\" IS '" + comment + "';"
		self.f.write(out + "\n")
		print


	def print(self, text):
		if text:
			self.f.write(text + "\n")
